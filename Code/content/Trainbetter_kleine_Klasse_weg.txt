package railroad;

classdiagram Railroad {
  class Railnet {
    String name;
    String organization;
    List<RailroadLine> parts;
  }

  class RailroadLine {
    String iD;
    Station startingStation;
    Station terminus;
    List<Station> stoppingStations;
    int amount_tracks;
    int age;
    boolean electrified;
  }

  class Station {
    String name;
    String adress;
    int tracks;
    StationType type;
  }

  enum StationType {
    MIXED, PASSANGER, FREIGHT;
  }

  class Journey {
    int trainNumber;
    RailroadLine railroadLine;
    TripStatus tripStatus;
  }

  enum TripStatus {
    ON_TIME, UNPUNCTUAL;
  }

  package Train{
    class Locomotive extends TrainComponent{
      Locomotivetype type;
      int max_cars;
    }

    enum Locomotivetype{
      ELECTRIC, DIESEL, STEAM, DIESELELECTRIC;
    }

    class BaggageCar extends TrainComponent;
    class SleepingCar extends TrainComponent;
    class PassengerCar extends TrainComponent;

    class Train {
      Locomotive locomotive;
      List<BaggageCar> baggageCars;
      List<SleepingCar> sleepingCars;
      List<PassengerCar> passengerCars;
      List<Journey> journeys;
    }
  }
  
  class Trip {
    int trainNumber;
    Journey journey;
    List<Station> stops;
    Station start;
    Station end;
    Date arrivalTime;
    Date departureTime;
  }

  association [1] RailroadLine (has) -> (stations) Station [*];
  association [1] Journey (runsOn) <-> (journeys) RailroadLine [*];
  association [*] Train () <-> (works) Railnet [1];
  association [1] Trip (has) <-> Train [*];
  association [*] Journey (is) <-> (ledBy) Locomotive [1];
}